#!/usr/bin/python3

'''Defines the class BaseModel'''
import uuid
from datetime import datetime

class BaseModel:
    '''Defines the BaseModel of each object in the project.'''
    def __init__(self, *args, **kwargs):
        '''Initialize each new Base Model.'''
        self.id =  str(uuid.uuid4())
        self.created_at = datetime.today()
        self.updated_at = datetime.today()

        def __str__(self):
            '''prints the string representation of a BaseModel instance.'''
            classname = self.__class__.__name__
            return f("{classname} {self.id}, {self.__dict}")
            
        def to-dict(self):
            '''returns dictionary of all keys/values in BaseModel.'''
            new_dict = self.__dict__.copy()
            new_dict["created_at"] = self.created_at.isoformat()
            new_dict["updated_at"] = self.updated_at.isoformat()
            new_dict["__class__"] = self.__class__.__name__
            return new_dict

        def save(self):
        """Update updated_at with the current datetime."""
        self.updated_at = datetime.today()
        models.storage.save()
